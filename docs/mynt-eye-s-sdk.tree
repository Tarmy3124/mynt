mynt-eye-s-sdk
├── 3rdparty
│   └── eigen3                   matrix 3rd lib
├── cmake
│   ├── Common.cmake             cmake common macro
│   ├── DetectCXX11.cmake
│   ├── DetectOpenCV.cmake
│   ├── FindCUDA
│   │   ├── make2cmake.cmake
│   │   ├── parse_cubin.cmake
│   │   └── run_nvcc.cmake
│   ├── FindCUDA.cmake
│   ├── IncludeGuard.cmake
│   ├── Option.cmake              include(DetectOpenCV.cmake)
│   ├── TargetArch.cmake
│   ├── templates
│   └── Utils.cmake               include(Common.cmake)
├── CMakeLists.txt
├── docs
│   ├── api
│   ├── conf.py                   sdkHtml config
│   ├── files
│   ├── images
│   │   ├── firmware
│   │   ├── product
│   │   ├── project
│   │   │   └── vs2017
│   │   ├── sdk
│   │   │   └── tools
│   │   └── tools
│   ├── Makefile                  sdkHtml Makefile
│   └── src
│       ├── firmware
│       ├── log
│       ├── product
│       ├── sdk
│       │   ├── control
│       │   ├── data
│       │   └── project
│       ├── slam
│       ├── support
│       └── wrapper
├── include
│   ├── deprecated
│   │   └── mynteye
│   │       ├── api.h              x
│   │       ├── callbacks.h        x
│   │       ├── context.h          x
│   │       ├── device.h           x
│   │       ├── files.h            x
│   │       ├── glog_init.h        x
│   │       ├── object.h           x
│   │       ├── plugin.h           x
│   │       ├── strings.h          x
│   │       ├── times.h            x
│   │       └── utils.h            x
│   └── mynteye
│       ├── api
│       │   ├── api.h              user api(mynteye.h types.h opencv2*)
│       │   ├── object.h           img formats transform(mynteye.h opencv2*)
│       │   └── plugin.h           plugin process in&out(mynteye.h opencv2*)
│       ├── device
│       │   ├── callbacks.h        processor data callback(mynteye.h mynteye/types.h)
│       │   ├── context.h          detect uvc device(mynteye.h)
│       │   ├── device.h           imu-->motions & camera-->streams(mynteye.h callbacks.h device/types.h)
│       │   ├── types.h            img & imu_data types(mynteye.h mynteye/types.h)
│       │   └── utils.h            user help(mynteye.h mynteye/types.h)
│       ├── global.h               os adapter
│       ├── logger.h               message output
│       ├── miniglog.h             google miniglog
│       ├── mynteye.h.in           api version(global.h)
│       ├── types.h                all types(mynteye.h)
│       └── util
│           ├── files.h           (mynteye.h)
│           ├── strings.h         (mynteye.h)
│           └── times.h           (mynteye.h)
├── Makefile
├── samples
│   ├── camera_with_junior_device_api.cc       (device.h utils.h times.h)
│   ├── camera_with_senior_api.cc              (api.h times.h)
│   ├── CMakeLists.txt                          samples build
│   ├── config
│   │   ├── S1030
│   │   │   └── deprecated
│   │   └── S210A
│   │       └── deprecated
│   ├── ctrl_auto_exposure.cc                  (api.h)
│   ├── ctrl_framerate.cc                      (api.h times.h)
│   ├── ctrl_iic_address.cc                    (api.h)
│   ├── ctrl_imu_low_pass_filter.cc            (api.h times.h)
│   ├── ctrl_imu_range.cc                      (api.h times.h)
│   ├── ctrl_infrared.cc                          
│   ├── ctrl_manual_exposure.cc
│   ├── ctrl_sync_timestamp.cc
│   ├── dataset.cc
│   ├── dataset.h
│   ├── device_writer.cc
│   ├── device_writer.h
│   ├── get_data_without_select.cc
│   ├── get_depth_and_points.cc
│   ├── get_depth.cc
│   ├── get_depth_with_region.cc
│   ├── get_device_info.cc
│   ├── get_disparity.cc
│   ├── get_from_callbacks.cc
│   ├── get_img_params.cc
│   ├── get_imu.cc
│   ├── get_imu_correspondence.cc
│   ├── get_imu_params.cc
│   ├── get_stereo_rectified.cc
│   ├── get_with_plugin.cc
│   ├── record.cc
│   ├── save_all_infos.cc
│   ├── save_single_image.cc
│   ├── simple_demo                    independent demo
│   │   ├── project_cmake
│   │   │   ├── CMakeLists.txt         linux build
│   │   │   └── mynteye_demo.cc
│   │   └── project_vs2017             windows vs
│   │       ├── images
│   │       └── mynteyes_demo         
│   │           └── mynteyes_demo
│   │               ├── stdafx.h
│   │               └── targetver.h
│   ├── util_cv.cc                    (util_cv.h device/utils.h)          
│   ├── util_cv.h                      cv painter(mynteye/types.h) 
│   ├── util_pcl.cc		      (util_pcl.h)
│   ├── util_pcl.h                     pcl cloud points viewer
│   ├── uvc_camera.cc
│   ├── write_device_info.cc
│   ├── write_img_params.cc
│   └── write_imu_params.cc
├── scripts
│   ├── common
│   └── win
│       ├── cmake
│       │   ├── mynteye-targets.cmake
│       │   └── mynteye-targets-release.cmake
│       └── nsis
│           └── Include
├── src
│   ├── main.cc
│   └── mynteye
│       ├── api
│       │   ├── api.cc                                     (correspondence.h dl.h plugin.h ...)
│       │   ├── camera_models
│       │   │   ├── camera.cc                              (camera.h)
│       │   │   ├── camera.h                                camera base(eigen3* opencv2* mynteye.h)
│       │   │   ├── equidistant_camera.cc                  (equidistant_camera.h)
│       │   │   ├── equidistant_camera.h                    KB projection model(opencv2* camera.h)
│       │   │   ├── gpl.cc
│       │   │   └── gpl.h
│       │   ├── correspondence.cc                          (correspondence.h device.h)
│       │   ├── correspondence.h                            stream control(api.h callbacks.h)
│       │   ├── data_tools.cc                              (data_tools.h)
│       │   ├── data_tools.h                                api<--data<-->obj(object.h api.h device.h) 
│       │   ├── dl.cc                                      (dl.h) 
│       │   ├── dl.h                                        dynamic loading(mynteye.h)
│       │   ├── processor                           root-->rectify-->disparity(norm)-->depth-->points
│       │   │   ├── depth_processor.cc                     (depth_Processor.h)
│       │   │   ├── depth_processor.h                      (processor.h types.h rectify_processor.h)
│       │   │   ├── depth_processor_ocv.cc                 (depth_processor_ocv.h) 
│       │   │   ├── depth_processor_ocv.h                   output cv::Mat(processor.h) 
│       │   │   ├── disparity_normalized_processor.cc      (opencv2* disparity_normalized_processor.h)
│       │   │   ├── disparity_normalized_processor.h       (processor.h)
│       │   │   ├── disparity_processor.cc                 (opencv2* disparity_processor.h)
│       │   │   ├── disparity_processor.h                  (mynteye/types.h processor.h)
│       │   │   ├── points_processor.cc                    (opencv2* points_processor.h)
│       │   │   ├── points_processor.h                     (mynteye/types.h processor.h)
│       │   │   ├── points_processor_ocv.cc              
│       │   │   ├── points_processor_ocv.h
│       │   │   ├── rectify_processor.cc                   (opencv2* rectify_processor.h)
│       │   │   ├── rectify_processor.h                    (equidistant_camera.h ...)
│       │   │   ├── rectify_processor_ocv.cc       
│       │   │   ├── rectify_processor_ocv.h
│       │   │   ├── root_camera_processor.cc               (opencv2* synthetic.h device.h data_tools.h)
│       │   │   └── root_camera_processor.h                (opencv2* processor.h)
│       │   ├── processor.cc                               (strings.h times.h data_tools.h)
│       │   ├── processor.h                                processor base(synthetic.h mynteye.h object.h)
│       │   ├── synthetic.cc                         (*processor.h object.h plugin.h device.h data_tools.h)
│       │   ├── synthetic.h                                synthetic pipeline(api.h)               
│       │   ├── version_checker.cc                         
│       │   └── version_checker.h
│       ├── device
│       │   ├── async_callback.h                           asynchronous data translate
│       │   ├── async_callback_impl.h                      derived
│       │   ├── channel
│       │   │   ├── bytes.cc
│       │   │   ├── bytes.h                                <--uint8_t data-->
│       │   │   ├── channels.cc
│       │   │   ├── channels.h                             channels control api
│       │   │   ├── def.h                                  data packet
│       │   │   ├── file_channel.cc
│       │   │   └── file_channel.h                         data parser
│       │   ├── config.cc
│       │   ├── config.h                                   config lists
│       │   ├── context.cc                                 create context
│       │   ├── device.cc                                  device class
│       │   ├── motions.cc                                 
│       │   ├── motions.h                                  imu motions
│       │   ├── standard                                   standard device s
│       │   │   ├── channels_adapter_s.cc
│       │   │   ├── channels_adapter_s.h
│       │   │   ├── device_s.cc
│       │   │   ├── device_s.h
│       │   │   ├── streams_adapter_s.cc
│       │   │   └── streams_adapter_s.h
│       │   ├── standard2                                  standard device s2
│       │   │   ├── channels_adapter_s2.cc
│       │   │   ├── channels_adapter_s2.h
│       │   │   ├── device_s2.cc
│       │   │   ├── device_s2.h
│       │   │   ├── streams_adapter_s2.cc
│       │   │   └── streams_adapter_s2.h
│       │   ├── streams.cc                                 
│       │   ├── streams.h                                  camera streams
│       │   ├── types.cc                                   to string
│       │   └── utils.cc                                   user helper
│       ├── miniglog.cc                          
│       ├── types.cc                                       device,streams,option...types str
│       ├── util
│       │   ├── files.cc
│       │   └── strings.cc
│       └── uvc
│ 
├── tools
│   ├── _build
│   │   ├── CMakeCache.txt
│   │   ├── CMakeFiles
│   │   │   ├── 3.5.1
│   │   │   │   ├── CMakeCCompiler.cmake
│   │   │   │   ├── CMakeCXXCompiler.cmake
│   │   │   │   ├── CMakeDetermineCompilerABI_C.bin
│   │   │   │   ├── CMakeDetermineCompilerABI_CXX.bin
│   │   │   │   ├── CMakeSystem.cmake
│   │   │   │   ├── CompilerIdC
│   │   │   │   │   └── CMakeCCompilerId.c
│   │   │   │   └── CompilerIdCXX
│   │   │   │       └── CMakeCXXCompilerId.cpp
│   │   │   ├── CMakeDirectoryInformation.cmake
│   │   │   ├── CMakeOutput.log
│   │   │   ├── CMakeTmp
│   │   │   ├── Makefile2
│   │   │   └── Makefile.cmake
│   │   ├── cmake_install.cmake
│   │   ├── dataset
│   │   │   ├── CMakeFiles
│   │   │   │   ├── CMakeDirectoryInformation.cmake
│   │   │   │   └── record2.dir
│   │   │   │       ├── cmake_clean.cmake
│   │   │   │       └── DependInfo.cmake
│   │   │   ├── cmake_install.cmake
│   │   │   └── Makefile
│   │   ├── Makefile
│   │   └── writer
│   │       ├── CMakeFiles
│   │       │   ├── CMakeDirectoryInformation.cmake
│   │       │   ├── device_info_writer.dir
│   │       │   │   ├── cmake_clean.cmake
│   │       │   │   └── DependInfo.cmake
│   │       │   ├── device_writer.dir
│   │       │   │   ├── cmake_clean.cmake
│   │       │   │   ├── cmake_clean_target.cmake
│   │       │   │   └── DependInfo.cmake
│   │       │   ├── img_params_writer.dir
│   │       │   │   ├── cmake_clean.cmake
│   │       │   │   └── DependInfo.cmake
│   │       │   ├── imu_params_writer.dir
│   │       │   │   ├── cmake_clean.cmake
│   │       │   │   └── DependInfo.cmake
│   │       │   └── save_all_infos.dir
│   │       │       ├── cmake_clean.cmake
│   │       │       └── DependInfo.cmake
│   │       ├── cmake_install.cmake
│   │       └── Makefile
│   ├── linter
│   └── _output
│       ├── bin
│       │   ├── dataset
│       │   └── writer
│       └── lib
│           └── writer
└── wrappers
    ├── android
    │   
    ├── python
    │   ├── CMakeLists.txt
    │   ├── samples
    │   │   ├── mynteye.py
    │   │   └── util
    │   │       ├── cv_painter.py
    │   │       └── __init__.py
    │   ├── src
    │   │   └── mynteye_py.cc
    │   └── third_party
    │       └── array
    │           ├── array_indexing_suite.hpp
    │           └── array_ref.hpp
    └── ros
        └── src
            └── mynt_eye_ros_wrapper
                ├── CMakeLists.txt
                ├── config
                │   ├── device
                │   ├── laserscan
                │   ├── process
                │   ├── slam
                │   └── sub
                │       ├── device_1
                │       ├── device_2
                │       ├── process_1
                │       └── process_2
                ├── launch
                │   ├── laserscan
                │   ├── slam
                │   └── sub
                ├── mesh
                ├── rviz
                ├── scripts
                │   └── get_device_info.py
                ├── src
                │   ├── configuru.hpp
                │   ├── wrapper_node.cc
                │   └── wrapper_nodelet.cc
                └── srv


